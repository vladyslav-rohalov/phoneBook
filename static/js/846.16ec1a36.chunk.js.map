{"version":3,"file":"static/js/846.16ec1a36.chunk.js","mappings":"gLAEO,SAASA,EAAaC,GAC3B,OAAOC,EAAAA,GAAAA,QAAcD,EACvB,CAEO,SAASE,EAAYF,GAC1B,OAAOC,EAAAA,GAAAA,MAAYD,EACrB,C,kKCUe,SAASG,IACtB,IAAAC,GAAwCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,GAAWC,EAAAA,EAAAA,MACXC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC9CC,GAA2BC,EAAAA,EAAAA,KAAnBC,EAAKF,EAALE,MAAOnB,EAAOiB,EAAPjB,SAEfoB,EAAAA,EAAAA,YAAU,WACRC,YAAW,WACTZ,GAAgB,EAClB,GAAG,IACL,GAAG,KAEHW,EAAAA,EAAAA,YAAU,WACM,OAAVD,GAAkBA,EAAMG,QAAU,MAAKpB,EAAAA,EAAAA,GAAYiB,EAAMnB,SAC/C,OAAVmB,GAA8B,OAAZnB,IAAkBD,EAAAA,EAAAA,GAAaC,EACvD,GAAG,CAACmB,EAAOnB,IAsBX,OACEuB,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAC,UACRC,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CAAAF,SAAA,EACbF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,KACRL,EAAAA,EAAAA,KAACM,EAAAA,GAAK,CAAAJ,SAAC,uBACPF,EAAAA,EAAAA,KAACO,EAAAA,GAAgB,CAAClB,MAAOA,KACzBc,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACC,SA1BS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAoBF,EAAKG,SAASC,KAAKC,MAC7C9B,EACE+B,EAAAA,EAAAA,YAA2B,CACzBJ,kBAAAA,KAGJF,EAAKO,OACP,EAgBmCjB,SAAA,EAC3BF,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAAAlB,UACJF,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,KAAK,OACLC,KAAK,OACLC,YAAY,oBACZC,UAAQ,OAGZzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CAACC,YAAY,gBAE5B3B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CAAA1B,SAAC,sCACXF,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CACXC,YAAY,cACZE,YA5Ba,WACnB1C,EACE+B,EAAAA,EAAAA,kBAAiC,CAC/B7B,MAAAA,IAGN,EAuBQyC,aAAc7C,QAKxB,C","sources":["helpers/notify.js","pages/verifyEmail/verifyEmail.jsx"],"sourcesContent":["import toast from 'react-hot-toast';\n\nexport function notifySucces(message) {\n  return toast.success(message);\n}\n\nexport function notifyError(message) {\n  return toast.error(message);\n}\n","import { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { useAuth } from 'hooks/useAuth';\nimport authOperations from 'Redux/auth/operations';\nimport { Toaster } from 'react-hot-toast';\nimport { notifyError, notifySucces } from 'helpers/notify';\nimport {\n  Container,\n  ContainerUtils,\n  Title,\n  Form,\n  Label,\n  Input,\n  ButtonCommon,\n  VerificationText,\n  SmallText,\n} from 'components/elements/';\n\nexport default function Verify() {\n  const [resendButton, setResendButton] = useState(true);\n  const dispatch = useDispatch();\n  const email = JSON.parse(localStorage.getItem('email'));\n  const { error, message } = useAuth();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setResendButton(false);\n    }, 30000);\n  }, []);\n\n  useEffect(() => {\n    if (error !== null && error.status >= 400) notifyError(error.message);\n    if (error === null && message !== null) notifySucces(message);\n  }, [error, message]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const verificationToken = form.elements.code.value;\n    dispatch(\n      authOperations.verifyEmail({\n        verificationToken,\n      })\n    );\n    form.reset();\n  };\n\n  const resendVerify = () => {\n    dispatch(\n      authOperations.resendVerifyEmail({\n        email,\n      })\n    );\n  };\n\n  return (\n    <Container>\n      <ContainerUtils>\n        <Toaster />\n        <Title>User verification</Title>\n        <VerificationText email={email} />\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <Input\n              type=\"text\"\n              name=\"code\"\n              placeholder=\"Verification code\"\n              required\n            />\n          </Label>\n          <ButtonCommon titleButton=\"Confirm\" />\n        </Form>\n        <SmallText>Will become active in 60 seconds</SmallText>\n        <ButtonCommon\n          titleButton=\"Resend code\"\n          handleClick={resendVerify}\n          toggleButton={resendButton}\n        />\n      </ContainerUtils>\n    </Container>\n  );\n}\n"],"names":["notifySucces","message","toast","notifyError","Verify","_useState","useState","_useState2","_slicedToArray","resendButton","setResendButton","dispatch","useDispatch","email","JSON","parse","localStorage","getItem","_useAuth","useAuth","error","useEffect","setTimeout","status","_jsx","Container","children","_jsxs","ContainerUtils","Toaster","Title","VerificationText","Form","onSubmit","e","preventDefault","form","target","verificationToken","elements","code","value","authOperations","reset","Label","Input","type","name","placeholder","required","ButtonCommon","titleButton","SmallText","handleClick","toggleButton"],"sourceRoot":""}
{"version":3,"file":"static/js/733.43db95bc.chunk.js","mappings":"wNAGO,IAAMA,GAASC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,6CAWTC,GAAKJ,EAAAA,EAAAA,GAAA,SAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,0JAULE,GAAML,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,iBAING,GAAWN,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,0OAiBXI,GAAaP,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,2KAcbK,GAAcR,EAAAA,EAAAA,GAAOS,EAAAA,IAAS,CAAAR,OAAA,YAAhBD,CAAiB,CAAAE,KAAA,UAAAC,OAAA,yB,UChD7B,SAASO,IACtB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAWD,EAAAA,EAAAA,QAAO,OAExBE,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,CAACJ,IAEJ,IAAMI,EAAW,WACfC,UAAUC,aACPC,aAAa,CACZC,MAAO,CACLC,MAAO,CAAEC,IAAK,IAAKC,MAAO,IAAKC,IAAK,KACpCC,OAAQ,CAAEH,IAAK,IAAKC,MAAO,KAAMC,IAAK,MACtCE,WAAY,UAGfC,MAAK,SAAAC,GACJ,IAAIR,EAAQR,EAASiB,QACrBT,EAAMU,UAAYF,EAClBR,EAAMW,MACR,IACCC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAClB,GACJ,EAsBA,OACEE,EAAAA,EAAAA,MAAC7C,EAAS,CAAA8C,SAAA,EACRC,EAAAA,EAAAA,KAAC1C,EAAK,CAAC2C,UAAW,kBAtBA,WACpB,IAAIlB,EAAQR,EAASiB,QACjBU,EAAQzB,EAASe,QACjBW,EAAMD,EAAME,WAAW,MAK3B,OAFAF,EAAMlB,MAFQ,IAGdkB,EAAMd,OAFS,KAGRiB,aAAY,WACjBF,EAAIG,UAAUvB,EAAO,EAAG,EALZ,IACC,KAKf,GAAG,IACL,CAW4BwB,EAAe,EAAEC,IAAKjC,KAC9CyB,EAAAA,EAAAA,KAACzC,EAAM,CAACiD,IAAK/B,KACbuB,EAAAA,EAAAA,KAACvC,EAAa,CACZgD,KAAK,SACLC,QAAS,WACPpC,GAAkBD,EACpB,EAAE0B,UAEFC,EAAAA,EAAAA,KAACtC,EAAW,OAEdsC,EAAAA,EAAAA,KAACxC,EAAW,CAACiD,KAAK,SAASC,QAAS,kBAnBtB,WAChB,IAEMC,EAAQ,CAAEC,IAFJnC,EAASe,QACFqB,UAAU,eAE7B3C,EAAW,GAAD4C,QAAAC,EAAAA,EAAAA,GAAK9C,GAAO,CAAE0C,IAC1B,CAc8CK,EAAW,IAEpD3C,IAAiB2B,EAAAA,EAAAA,KAACiB,EAAAA,GAAa,CAAChD,QAASA,MAGhD,C","sources":["pages/camera/camera.styled.jsx","pages/camera/camera.jsx"],"sourcesContent":["import styled from '@emotion/styled/macro';\nimport { FcGallery } from 'react-icons/fc';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Frame = styled.iframe`\n  border-top-left-radius: 1.2em;\n  border-top-right-radius: 1.2em;\n`;\n\nexport const Video = styled.video`\n  position: absolute;\n  transform: scaleX(-1);\n  width: 300px;\n  height: calc(100% - 36px);\n  object-fit: cover;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n`;\n\nexport const Canvas = styled.canvas`\n  display: none;\n`;\n\nexport const ButtonPhoto = styled.button`\n  position: absolute;\n  bottom: 7%;\n  left: 50%;\n  transform: translate(-50%, -7%);\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  background: #ffffffcc;\n  z-index: 2;\n  cursor: pointer;\n  &:active {\n    box-shadow: inset 0px 0px 5px 5px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const ButtonGallery = styled.button`\n  position: absolute;\n  bottom: 7%;\n  left: 15%;\n  transform: translate(-50%, -7%);\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  border: none;\n  z-index: 2;\n  background: #ffffffcc;\n  cursor: pointer;\n`;\n\nexport const IconGallery = styled(FcGallery)`\n  width: 80%;\n  height: 80%;\n`;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { GalleryMobile } from 'components';\nimport {\n  Container,\n  Video,\n  Canvas,\n  ButtonPhoto,\n  ButtonGallery,\n  IconGallery,\n} from './camera.styled';\n\nexport default function Camera() {\n  const [gallery, setGallery] = useState([]);\n  const [isOpenGallery, setIsOpenGallery] = useState(false);\n  const videoRef = useRef(null);\n  const photoRef = useRef(null);\n\n  useEffect(() => {\n    getVideo();\n  }, [videoRef]);\n\n  const getVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          width: { min: 360, ideal: 720, max: 980 },\n          height: { min: 640, ideal: 1280, max: 1920 },\n          facingMode: 'user',\n        },\n      })\n      .then(stream => {\n        let video = videoRef.current;\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch(err => {\n        throw new Error(err);\n      });\n  };\n\n  const paintToCanvas = () => {\n    let video = videoRef.current;\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    const width = 720;\n    const height = 1280;\n    photo.width = width;\n    photo.height = height;\n    return setInterval(() => {\n      ctx.drawImage(video, 0, 0, width, height);\n    }, 200);\n  };\n\n  const takePhoto = () => {\n    let photo = photoRef.current;\n    const data = photo.toDataURL('image/jpeg');\n    const image = { src: data };\n    setGallery([...gallery, image]);\n  };\n\n  return (\n    <Container>\n      <Video onCanPlay={() => paintToCanvas()} ref={videoRef} />\n      <Canvas ref={photoRef} />\n      <ButtonGallery\n        type=\"button\"\n        onClick={() => {\n          setIsOpenGallery(!isOpenGallery);\n        }}\n      >\n        <IconGallery />\n      </ButtonGallery>\n      <ButtonPhoto type=\"button\" onClick={() => takePhoto()}></ButtonPhoto>\n\n      {isOpenGallery && <GalleryMobile gallery={gallery} />}\n    </Container>\n  );\n}\n"],"names":["Container","_styled","target","name","styles","Video","Canvas","ButtonPhoto","ButtonGallery","IconGallery","FcGallery","Camera","_useState","useState","_useState2","_slicedToArray","gallery","setGallery","_useState3","_useState4","isOpenGallery","setIsOpenGallery","videoRef","useRef","photoRef","useEffect","getVideo","navigator","mediaDevices","getUserMedia","video","width","min","ideal","max","height","facingMode","then","stream","current","srcObject","play","catch","err","Error","_jsxs","children","_jsx","onCanPlay","photo","ctx","getContext","setInterval","drawImage","paintToCanvas","ref","type","onClick","image","src","toDataURL","concat","_toConsumableArray","takePhoto","GalleryMobile"],"sourceRoot":""}
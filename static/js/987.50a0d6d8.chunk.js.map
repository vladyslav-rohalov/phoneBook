{"version":3,"file":"static/js/987.50a0d6d8.chunk.js","mappings":"oPAUe,SAASA,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAuBXC,EAAY,SAACC,EAAgBC,GACjC,IAAIC,EAASV,EAAMW,MAAK,SAAAC,GACtB,OAAIA,EAAYC,OAASL,IACvBM,EAAAA,GAAAA,KAAW,8BAA+B,CACxCC,SAAUD,EAAAA,GAAAA,SAAAA,cAEL,EAGX,IACKJ,IACHP,GAASa,EAAAA,EAAAA,IAAWP,IACpBJ,EAAS,aAAc,CAAEY,SAAS,KAEpCP,GAAS,CACX,EAMA,OACEQ,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KACfD,EAAAA,EAAAA,KAACE,EAAAA,EAAc,CACbC,MAAM,kBACNC,YAAY,cACZC,aAhDe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTjB,EAAOgB,EAAKE,SAASlB,KAAKmB,MAO1BvB,EAAU,CACdI,KAAMA,EACNoB,OARYJ,EAAKE,SAASE,OAAOD,OAYnCE,QAAQC,IAAI1B,GACZF,EAAUM,EAAMJ,GAChBoB,EAAKO,OACP,MAmCF,C","sources":["pages/addNewContact/addNewContact.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n// import { useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { selectContacts } from 'Redux/Selectors';\nimport { addContact } from 'Redux/contacts/Operations';\nimport { Container } from '../../components/elements/backdropContainer/backdropContainer.styled';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactAddEdit from 'components/contactAddEdit/contactAddEdit';\n\nexport default function AddNewContact() {\n  const items = useSelector(selectContacts);\n  // const avatarPicker = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.number.value;\n    // const email = form.elements.email.value;\n    // const avatar = form.elements.avatar.files[0];\n    // const formData = new FormData();\n    // formData.append('avatar', avatar);\n\n    const contact = {\n      name: name,\n      number: phone,\n      // email: email,\n      // avatar: formData,\n    };\n    console.log(contact);\n    twinCheck(name, contact);\n    form.reset();\n  };\n\n  const twinCheck = (newContactName, contact) => {\n    let isTwin = items.find(prevContact => {\n      if (prevContact.name === newContactName) {\n        toast.warn('This contact already exists', {\n          position: toast.POSITION.TOP_CENTER,\n        });\n        return true;\n      }\n      return false;\n    });\n    if (!isTwin) {\n      dispatch(addContact(contact));\n      navigate('/phonebook', { replace: true });\n    }\n    isTwin = false;\n  };\n\n  // const handlePick = () => {\n  //   avatarPicker.current.click();\n  // };\n\n  return (\n    <Container>\n      <ToastContainer />\n      <ContactAddEdit\n        title=\"Add new contact\"\n        titleButton=\"Add contact\"\n        handleSubmit={handleSubmit}\n        // handlePick={handlePick}\n        // avatarPicker={avatarPicker}\n      />\n    </Container>\n  );\n}\n"],"names":["AddNewContact","items","useSelector","selectContacts","dispatch","useDispatch","navigate","useNavigate","twinCheck","newContactName","contact","isTwin","find","prevContact","name","toast","position","addContact","replace","_jsxs","Container","children","_jsx","ToastContainer","ContactAddEdit","title","titleButton","handleSubmit","e","preventDefault","form","target","elements","value","number","console","log","reset"],"sourceRoot":""}
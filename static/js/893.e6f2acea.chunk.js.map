{"version":3,"file":"static/js/893.e6f2acea.chunk.js","mappings":"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","sources":["Redux/Selectors.js","components/elements/backdropContainer/backdropContainer.styled.jsx","components/error/error.styled.jsx","components/error/error.jsx","components/iconBar/iconBar.styled.jsx","components/iconBar/iconBar.jsx","pages/contactInfo/contactInfo.styled.jsx","pages/contactInfo/contactInfo.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nconst backdrop = require('./backdrop.webp');\n\nexport const Container = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  background-color: black;\n  height: 100%;\n  width: 100%;\n  border-radius: 1.125em;\n  background-image: url(${backdrop});\n  background-size: cover;\n  overflow-y: auto;\n  box-shadow: 0px 2px 6px 4px rgba(121, 128, 133, 0.3) inset;\n  &::-webkit-scrollbar {\n    width: 0px;\n    height: 0px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FaRegSadTear } from 'react-icons/fa';\n\nexport const ContainerError = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #ffffffcc;\n  border-radius: 0.5em;\n  height: 20vh;\n  align-items: center;\n`;\n\nexport const IconSad = styled(FaRegSadTear)`\n  width: 2em;\n  height: 2em;\n`;\n\nexport const TextError = styled.p`\n  font-size: 1.5em;\n  margin: 0.5em;\n`;\n","import { ContainerError, TextError, IconSad } from './error.styled';\n\nexport default function Error() {\n  return (\n    <ContainerError>\n      <IconSad />\n      <TextError>Oops!</TextError>\n      <TextError>Something went wrong.</TextError>\n    </ContainerError>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { BiPhone } from 'react-icons/bi';\nimport { AiOutlineMessage } from 'react-icons/ai';\nimport { FiMail } from 'react-icons/fi';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { AiOutlineEdit } from 'react-icons/ai';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 10%;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n  border-radius: 0.5em;\n  padding: 0 0.5em;\n  margin-top: 2em;\n  align-items: center;\n}`;\n\nconst buttonStyle = `\nheight: 3em;\nwidth: 3em;\nborder-radius: 50%;\nborder: none;\ncursor: pointer;`;\n\nexport const ButtonPhone = styled.button`\n  ${buttonStyle}\n  background-color: #3ad364;\n`;\n\nexport const ButtonMessage = styled.button`\n  ${buttonStyle}\n  background-color: #41a1ef;\n  opacity: 0.3;\n`;\n\nexport const ButtonMail = styled.button`\n  ${buttonStyle}\n  background-color: #ffffff;\n`;\n\nexport const ButtonEdit = styled.button`\n  ${buttonStyle}\n  background-color: #c272ce;\n`;\n\nexport const ButtonDelete = styled.button`\n  ${buttonStyle}\n  background-color: #F30C27;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const TagA = styled.a`\n  text-decoration: none;\n`;\n\nconst IconStyle = ` \nwidth: 100%;\nheight: 100%;\nfill: #FFFFFF;\n`;\n\nexport const IconPhone = styled(BiPhone)`\n  ${IconStyle}\n`;\n\nexport const IconMessage = styled(AiOutlineMessage)`\n  ${IconStyle}\n`;\n\nexport const IconMail = styled(FiMail)`\n  ${IconStyle}\n`;\n\nexport const IconEdit = styled(AiOutlineEdit)`\n  ${IconStyle}\n`;\n\nexport const IconDelete = styled(AiOutlineDelete)`\n  ${IconStyle}\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  Container,\n  ButtonPhone,\n  ButtonMessage,\n  ButtonMail,\n  ButtonEdit,\n  ButtonDelete,\n  LinkStyled,\n  TagA,\n  IconPhone,\n  IconMessage,\n  IconMail,\n  IconEdit,\n  IconDelete,\n} from './iconBar.styled';\n\nexport default function IconBar({ contact, onDelClick, id }) {\n  const location = useLocation();\n  return (\n    <Container>\n      <TagA href={`tel:${contact.phone}`}>\n        <ButtonPhone type=\"button\">\n          <IconPhone />\n        </ButtonPhone>\n      </TagA>\n      <LinkStyled>\n        <ButtonMessage type=\"button\" disabled>\n          <IconMessage />\n        </ButtonMessage>\n      </LinkStyled>\n      <TagA href={`mailto:${contact.email}`}>\n        <ButtonMail type=\"button\">\n          <IconMail />\n        </ButtonMail>\n      </TagA>\n      <LinkStyled to={`/edit/${id}`} state={{ from: location }}>\n        <ButtonEdit type=\"button\">\n          <IconEdit />\n        </ButtonEdit>\n      </LinkStyled>\n      <LinkStyled to={`/phonebook`}>\n        <ButtonDelete type=\"button\" onClick={onDelClick}>\n          <IconDelete />\n        </ButtonDelete>\n      </LinkStyled>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ContactContainer = styled.div`\n  width: calc(100% - 1.25em);\n  min-height: 100%;\n  margin: 0 auto;\n  padding: 0 0.5em;\n`;\n\nexport const ContactDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 7.5em);\n  margin-top: 3em;\n  border-radius: 0.5em;\n  background-color: #ffffffcc;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n  padding: 1.25em 0.6em 0px 0.6em;\n`;\n\nexport const ContactAvatar = styled.img`\n  display: block;\n  border-radius: 50%;\n  border: 3px solid #c272ce;\n  margin: 0 auto 1.25em;\n`;\n\nexport const ContactName = styled.h1`\n  font-size: 1.5em;\n  margin: 0 auto 1.25em;\n`;\n\nexport const ContactPhoneMail = styled.p`\n  font-size: 1em;\n  margin: 0 auto 1em;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { selectContacts, selectError } from 'Redux/Selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts, delContact } from 'Redux/contacts/Operations';\nimport { Container } from '../../components/elements/backdropContainer/backdropContainer.styled';\nimport IconBar from 'components/iconBar/iconBar';\nimport Error from 'components/error/error';\nimport {\n  ContactContainer,\n  ContactDetails,\n  // ContactAvatar,\n  ContactName,\n  ContactPhoneMail,\n} from './contactInfo.styled';\n\nexport default function ContactInfo() {\n  const items = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const contact = items.find(item => item.id === id);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactContainer>\n        {error && <Error />}\n        {contact && (\n          <ContactDetails>\n            {/* <ContactAvatar src={contact.avatar} alt=\"avatar\" /> */}\n            <ContactName>{contact.name}</ContactName>\n            <ContactPhoneMail>{contact.number}</ContactPhoneMail>\n            {/* <ContactPhoneMail>{contact.email}</ContactPhoneMail> */}\n            <IconBar\n              contact={contact}\n              onDelClick={() => dispatch(delContact(id))}\n              id={id}\n            />\n          </ContactDetails>\n        )}\n      </ContactContainer>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","backdrop","require","Container","styled","_templateObject","_taggedTemplateLiteral","ContainerError","IconSad","FaRegSadTear","_templateObject2","TextError","_templateObject3","Error","_jsxs","children","_jsx","buttonStyle","ButtonPhone","ButtonMessage","ButtonMail","_templateObject4","ButtonEdit","_templateObject5","ButtonDelete","_templateObject6","LinkStyled","Link","_templateObject7","TagA","_templateObject8","IconStyle","IconPhone","BiPhone","_templateObject9","IconMessage","AiOutlineMessage","_templateObject10","IconMail","FiMail","_templateObject11","IconEdit","AiOutlineEdit","_templateObject12","IconDelete","AiOutlineDelete","_templateObject13","IconBar","_ref","onDelClick","id","location","useLocation","href","concat","phone","type","disabled","email","to","from","onClick","ContactContainer","ContactDetails","ContactName","ContactPhoneMail","ContactInfo","useSelector","dispatch","useDispatch","useParams","find","item","useEffect","fetchContacts","number","delContact"],"sourceRoot":""}
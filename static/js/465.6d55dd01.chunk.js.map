{"version":3,"file":"static/js/465.6d55dd01.chunk.js","mappings":"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","sources":["Redux/Selectors.js","components/contactAddEdit/contactAddEdit.styled.jsx","components/contactAddEdit/contactAddEdit.jsx","components/elements/backdropContainer/backdropContainer.styled.jsx","components/elements/button/button.styled.jsx","components/elements/button/button.jsx","components/elements/form/form.styled.jsx","components/elements/title/title.styled.jsx","components/elements/utilsContainer/utilsContainer.styled.jsx","helpers/notify.js","hooks/useContacts.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectStatus = state => state.contacts.status;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled/macro';\nimport { RxAvatar } from 'react-icons/rx';\nimport { TbCloudUpload } from 'react-icons/tb';\n\nexport const AddContactContainer = styled.div`\n  width: calc(100% - 1.25em);\n  min-height: 100%;\n  margin: 0 auto;\n  padding: 0 0.5em;\n`;\n\nexport const AddDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 7.5em);\n  margin-top: 3em;\n  border-radius: 0.5em;\n  background-color: #ffffffcc;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n  padding: 1.25em 0.6em 0em 0.6em;\n`;\n\nexport const ContainerForm = styled.div`\n  display: flex;\n`;\n\nexport const InputHidden = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n  line-height: 0;\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const AvatarIcon = styled(RxAvatar)`\n  position: relative;\n  opacity: 1;\n  width: 100%;\n  height: 100%;\n  color: #a8aaab;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const UploadIcon = styled(TbCloudUpload)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0;\n  width: 90%;\n  height: 90%;\n  color: #a8aaab;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ButtonAvatar = styled.button`\n  position: relative;\n  align-self: center;\n  width: 8em;\n  height: 8em;\n  border-radius: 50%;\n  border: none;\n  background-color: #edf5fa;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    ${AvatarIcon} {\n      opacity: 0;\n    }\n    ${UploadIcon} {\n      opacity: 1;\n    }\n  }\n`;\n","import { ContainerUtils } from '../elements/utilsContainer/utilsContainer.styled';\nimport { Title } from '../elements/title/title.styled';\nimport ButtonCommon from 'components/elements/button/button';\nimport { Form, Label, Input } from '../elements/form/form.styled';\nimport {\n  ContainerForm,\n  InputHidden,\n  ButtonAvatar,\n  AvatarIcon,\n  UploadIcon,\n} from './contactAddEdit.styled';\n\nexport default function ContactAddEdit({\n  title,\n  titleButton,\n  handleSubmit,\n  name,\n  phone,\n  handlePick,\n  avatarPicker,\n  email,\n}) {\n  return (\n    <ContainerUtils>\n      <Title>{title}</Title>\n      <ContainerForm>\n        <Form onSubmit={handleSubmit}>\n          {/* ========== Avatar ========== */}\n          <Label>\n            <ButtonAvatar onClick={handlePick} type=\"button\">\n              <AvatarIcon />\n              <UploadIcon />\n            </ButtonAvatar>\n            <InputHidden\n              ref={avatarPicker}\n              type=\"file\"\n              name=\"avatar\"\n              accept=\"image/*,.png,.jpeg,.webp\"\n            />\n          </Label>\n          {/* ========== Avatar ========== */}\n          <Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              defaultValue={name}\n              placeholder=\"Name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n          <Label>\n            <Input\n              type=\"tel\"\n              name=\"phone\"\n              defaultValue={phone}\n              placeholder=\"Phone number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n          <Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              defaultValue={email}\n              placeholder=\"Email\"\n              pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"\n              title=\"The email address must be set to letters and contain @, it must not contain spaces, dashes, or parentheses. \"\n            />\n          </Label>\n          <ButtonCommon titleButton={titleButton} />\n        </Form>\n      </ContainerForm>\n    </ContainerUtils>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst backdrop = require('./backdrop.webp');\n\nexport const Container = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  background-color: black;\n  height: 100%;\n  width: 100%;\n  border-radius: 1.125em;\n  background-image: url(${backdrop});\n  background-size: cover;\n  overflow-y: auto;\n  box-shadow: 0px 2px 6px 4px rgba(121, 128, 133, 0.3) inset;\n  &::-webkit-scrollbar {\n    width: 0px;\n    height: 0px;\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 10em;\n  height: 2.5em;\n  margin: 0 auto 2em;\n  background-image: linear-gradient(\n    to right,\n    #6441a5 0%,\n    #2a0845 51%,\n    #6441a5 100%\n  );\n  transition: 0.5s;\n  background-size: 200% auto;\n  text-transform: uppercase;\n  color: #ffffff;\n  cursor: pointer;\n  border: none;\n  border-radius: 0.25em;\n  box-shadow: 0 0 0.5em #333;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-position: right center;\n    color: #ffffff;\n    text-decoration: none;\n  }\n`;\n","import { Button } from './button.styled';\n\nexport default function ButtonCommon({ titleButton, handleClick }) {\n  return (\n    <Button type=\"submit\" onClick={handleClick}>\n      {titleButton}&nbsp;\n    </Button>\n  );\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.25em;\n`;\n\nexport const Input = styled.input`\n  height: 2em;\n  padding-left: 1.9em;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 0.5em;\n  background-color: #ffffffcc;\n  &:focus {\n    outline: none;\n    border: 1px solid #2196f3;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  margin: 0 auto 1em;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContainerUtils = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% - 2.5em);\n  height: calc(100% - 7.5em);\n  margin: 3em auto 0;\n  padding: 0 0.5em;\n  border-radius: 0.5em;\n  background-color: #ffffffcc;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n  padding: 1.25em 0.6em 0em 0.6em;\n`;\n","import toast from 'react-hot-toast';\n\nexport function notifySucces(message) {\n  return toast.success(message);\n}\n\nexport function notifyError(message) {\n  return toast.error(message);\n}\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilter,\n  selectFilteredContacts,\n  selectStatus,\n} from 'Redux/Selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n  const filtredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const status = useSelector(selectStatus);\n\n  return {\n    contacts,\n    isLoading,\n    filter,\n    filtredContacts,\n    error,\n    status,\n  };\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectStatus","status","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContainerForm","_styled","target","styles","InputHidden","AvatarIcon","RxAvatar","UploadIcon","TbCloudUpload","ButtonAvatar","ContactAddEdit","_ref","title","titleButton","handleSubmit","phone","handlePick","avatarPicker","email","_jsxs","ContainerUtils","children","_jsx","Title","Form","onSubmit","Label","onClick","type","ref","accept","Input","defaultValue","placeholder","required","pattern","ButtonCommon","backdrop","require","Container","styled","_templateObject","_taggedTemplateLiteral","Button","handleClick","notifySucces","message","toast","notifyError","useContacts","useSelector","filtredContacts","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}
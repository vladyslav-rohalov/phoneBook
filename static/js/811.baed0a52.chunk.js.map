{"version":3,"file":"static/js/811.baed0a52.chunk.js","mappings":"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","sources":["components/elements/backdropContainer/backdropContainer.styled.jsx","components/elements/button/button.styled.jsx","components/elements/button/button.jsx","components/elements/form/form.styled.jsx","components/elements/title/title.styled.jsx","components/elements/utilsContainer/utilsContainer.styled.jsx","helpers/notify.js","components/elements/verificationText/verificationText.styled.jsx","components/elements/verificationText/verificationText.jsx","pages/verifyEmail/verifyEmail.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst backdrop = require('./backdrop.webp');\n\nexport const Container = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  background-color: black;\n  height: 100%;\n  width: 100%;\n  border-radius: 1.125em;\n  background-image: url(${backdrop});\n  background-size: cover;\n  overflow-y: auto;\n  box-shadow: 0px 2px 6px 4px rgba(121, 128, 133, 0.3) inset;\n  &::-webkit-scrollbar {\n    width: 0px;\n    height: 0px;\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 10em;\n  height: 2.5em;\n  margin: 0 auto 2em;\n  background-image: linear-gradient(\n    to right,\n    #6441a5 0%,\n    #2a0845 51%,\n    #6441a5 100%\n  );\n  transition: 0.5s;\n  background-size: 200% auto;\n  text-transform: uppercase;\n  color: #ffffff;\n  cursor: pointer;\n  border: none;\n  border-radius: 0.25em;\n  box-shadow: 0 0 0.5em #333;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-position: right center;\n    color: #ffffff;\n    text-decoration: none;\n  }\n`;\n","import { Button } from './button.styled';\n\nexport default function ButtonCommon({ titleButton, handleClick }) {\n  return (\n    <Button type=\"submit\" onClick={handleClick}>\n      {titleButton}&nbsp;\n    </Button>\n  );\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.25em;\n`;\n\nexport const Input = styled.input`\n  height: 2em;\n  padding-left: 1.9em;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 0.5em;\n  background-color: #ffffffcc;\n  &:focus {\n    outline: none;\n    border: 1px solid #2196f3;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  margin: 0 auto 1em;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContainerUtils = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% - 2.5em);\n  height: calc(100% - 7.5em);\n  margin: 3em auto 0;\n  padding: 0 0.5em;\n  border-radius: 0.5em;\n  background-color: #ffffffcc;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n  padding: 1.25em 0.6em 0em 0.6em;\n`;\n","import toast from 'react-hot-toast';\n\nexport function notifySucces(message) {\n  return toast.success(message);\n}\n\nexport function notifyError(message) {\n  return toast.error(message);\n}\n","import styled from '@emotion/styled';\n\nexport const TextStyled = styled.p`\n  text-align: justify;\n  font-size: 1.2em;\n`;\n\nexport const SpanStyled = styled.span`\n  font-weight: 500;\n`;\n","import { TextStyled, SpanStyled } from './verificationText.styled';\n\nexport default function VerificationText({ email }) {\n  return (\n    <TextStyled>\n      Letter with the code was sent to the <SpanStyled>{email}</SpanStyled>, to\n      confirm registration, insert the code from the letter in the field below.\n    </TextStyled>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useAuth } from 'hooks/useAuth';\nimport authOperations from 'Redux/auth/operations';\nimport { Form, Label, Input } from '../../components/elements/form/form.styled';\nimport { Container } from '../../components/elements/backdropContainer/backdropContainer.styled';\nimport { ContainerUtils } from '../../components/elements/utilsContainer/utilsContainer.styled';\nimport { Title } from 'components/elements/title/title.styled';\nimport { Toaster } from 'react-hot-toast';\nimport { notifyError, notifySucces } from 'helpers/notify';\nimport ButtonCommon from 'components/elements/button/button';\nimport VerificationText from 'components/elements/verificationText/verificationText';\n\nexport default function Verify() {\n  const dispatch = useDispatch();\n  const email = JSON.parse(localStorage.getItem('email'));\n  const { error, message } = useAuth();\n\n  useEffect(() => {\n    if (error !== null && error.status >= 400) notifyError(error.message);\n    if (error === null && message !== null) notifySucces(message);\n  }, [error, message]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const verificationToken = form.elements.code.value;\n    dispatch(\n      authOperations.verifyEmail({\n        verificationToken,\n      })\n    );\n    form.reset();\n  };\n\n  const resendVerify = () => {\n    dispatch(\n      authOperations.resendVerifyEmail({\n        email,\n      })\n    );\n  };\n\n  return (\n    <Container>\n      <ContainerUtils>\n        <Toaster />\n        <Title>User verification</Title>\n        <VerificationText email={email} />\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <Input\n              type=\"text\"\n              name=\"code\"\n              placeholder=\"Verification code\"\n              required\n            />\n          </Label>\n          <ButtonCommon titleButton=\"Send\" />\n        </Form>\n        <ButtonCommon titleButton=\"Resend code\" handleClick={resendVerify} />\n        {/* <button type=\"button\" onClick={resendVerify}>\n          Resend verify\n        </button> */}\n      </ContainerUtils>\n    </Container>\n  );\n}\n"],"names":["backdrop","require","Container","styled","_templateObject","_taggedTemplateLiteral","Button","_styled","target","name","styles","ButtonCommon","_ref","titleButton","handleClick","_jsxs","type","onClick","children","Form","Label","Input","Title","ContainerUtils","notifySucces","message","toast","notifyError","TextStyled","SpanStyled","_templateObject2","VerificationText","email","_jsx","Verify","dispatch","useDispatch","JSON","parse","localStorage","getItem","_useAuth","useAuth","error","useEffect","status","Toaster","onSubmit","e","preventDefault","form","verificationToken","elements","code","value","authOperations","reset","placeholder","required"],"sourceRoot":""}
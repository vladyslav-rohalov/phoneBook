{"version":3,"file":"static/js/893.3e0cec66.chunk.js","mappings":"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","sources":["Redux/Selectors.js","components/elements/backdropContainer/backdropContainer.styled.jsx","hooks/useContacts.js","components/iconBar/iconBar.styled.jsx","components/iconBar/iconBar.jsx","pages/contactInfo/contactInfo.styled.jsx","pages/contactInfo/contactInfo.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectStatus = state => state.contacts.status;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nconst backdrop = require('./backdrop.webp');\n\nexport const Container = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  background-color: black;\n  height: 100%;\n  width: 100%;\n  border-radius: 1.125em;\n  background-image: url(${backdrop});\n  background-size: cover;\n  overflow-y: auto;\n  box-shadow: 0px 2px 6px 4px rgba(121, 128, 133, 0.3) inset;\n  &::-webkit-scrollbar {\n    width: 0px;\n    height: 0px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilter,\n  selectFilteredContacts,\n  selectStatus,\n} from 'Redux/Selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n  const filtredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const status = useSelector(selectStatus);\n\n  return {\n    contacts,\n    isLoading,\n    filter,\n    filtredContacts,\n    error,\n    status,\n  };\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { BiPhone } from 'react-icons/bi';\nimport { AiFillStar } from 'react-icons/ai';\nimport { CiMail } from 'react-icons/ci';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { AiOutlineEdit } from 'react-icons/ai';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 10%;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n  border-radius: 0.5em;\n  padding: 0 0.5em;\n  margin-top: 2em;\n  align-items: center;\n}`;\n\nconst buttonStyle = `\nheight: 3em;\nwidth: 3em;\nborder-radius: 50%;\nborder: none;\ncursor: pointer;`;\n\nexport const ButtonPhone = styled.button`\n  ${buttonStyle}\n  background-color: #3ad364;\n`;\n\nexport const ButtonFavorite = styled.button`\n  ${buttonStyle}\n  background-color: #ffffff;\n`;\n\nexport const ButtonMail = styled.button`\n  ${buttonStyle}\n  background-color: #41a1ef;\n`;\n\nexport const ButtonEdit = styled.button`\n  ${buttonStyle}\n  background-color: #c272ce;\n`;\n\nexport const ButtonDelete = styled.button`\n  ${buttonStyle}\n  background-color: #F30C27;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const TagA = styled.a`\n  text-decoration: none;\n`;\n\nconst IconStyle = ` \nwidth: 100%;\nheight: 100%;\nfill: #FFFFFF;\n`;\n\nexport const IconPhone = styled(BiPhone)`\n  ${IconStyle}\n`;\n\nexport const IconFavorite = styled(AiFillStar)`\n  ${IconStyle}\n  fill: ${props => props.fill};\n`;\n\nexport const IconMail = styled(CiMail)`\n  ${IconStyle}\n`;\n\nexport const IconEdit = styled(AiOutlineEdit)`\n  ${IconStyle}\n`;\n\nexport const IconDelete = styled(AiOutlineDelete)`\n  ${IconStyle}\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  Container,\n  ButtonPhone,\n  ButtonFavorite,\n  ButtonMail,\n  ButtonEdit,\n  ButtonDelete,\n  LinkStyled,\n  TagA,\n  IconPhone,\n  IconFavorite,\n  IconMail,\n  IconEdit,\n  IconDelete,\n} from './iconBar.styled';\n\nexport default function IconBar({ contact, onDelClick, id, onFavoriteClick }) {\n  const location = useLocation();\n  const fill = () => {\n    return contact.favorite ? '#EDDF0F' : '#DDDDDC';\n  };\n\n  return (\n    <Container>\n      <TagA href={`tel:${contact.phone}`}>\n        <ButtonPhone type=\"button\">\n          <IconPhone />\n        </ButtonPhone>\n      </TagA>\n      <LinkStyled>\n        <ButtonFavorite type=\"button\" onClick={onFavoriteClick}>\n          <IconFavorite fill={fill()} />\n        </ButtonFavorite>\n      </LinkStyled>\n      <TagA href={`mailto:${contact.email}`}>\n        <ButtonMail type=\"button\">\n          <IconMail />\n        </ButtonMail>\n      </TagA>\n      <LinkStyled to={`/edit/${id}`} state={{ from: location }}>\n        <ButtonEdit type=\"button\">\n          <IconEdit />\n        </ButtonEdit>\n      </LinkStyled>\n      <LinkStyled to={`/phonebook`}>\n        <ButtonDelete type=\"button\" onClick={onDelClick}>\n          <IconDelete />\n        </ButtonDelete>\n      </LinkStyled>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ContactContainer = styled.div`\n  width: calc(100% - 1.25em);\n  min-height: 100%;\n  margin: 0 auto;\n  padding: 0 0.5em;\n`;\n\nexport const ContactDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 7.5em);\n  margin-top: 3em;\n  border-radius: 0.5em;\n  background-color: #ffffffcc;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n  padding: 1.25em 0.6em 0px 0.6em;\n`;\n\nexport const ContactAvatar = styled.img`\n  display: block;\n  border-radius: 50%;\n  border: 3px solid #c272ce;\n  margin: 0 auto 1.25em;\n`;\n\nexport const ContactName = styled.h1`\n  font-size: 1.5em;\n  margin: 0 auto 1.25em;\n`;\n\nexport const ContactPhoneMail = styled.p`\n  font-size: 1em;\n  margin: 0 auto 1em;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useContacts } from 'hooks/useContacts';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  delContact,\n  updateStatusContact,\n} from 'Redux/contacts/Operations';\nimport { Container } from '../../components/elements/backdropContainer/backdropContainer.styled';\nimport IconBar from 'components/iconBar/iconBar';\n// import Error from 'components/error/error';\nimport {\n  ContactContainer,\n  ContactDetails,\n  ContactAvatar,\n  ContactName,\n  ContactPhoneMail,\n} from './contactInfo.styled';\n\nexport default function ContactInfo() {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { contacts } = useContacts();\n  const contact = contacts.find(item => item._id === id);\n\n  // const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleFavorite = () => {\n    const favorite = { favorite: !contact.favorite };\n    dispatch(updateStatusContact({ id, favorite }));\n  };\n\n  return (\n    <Container>\n      <ContactContainer>\n        {/* {error && <Error />} */}\n        {contact && (\n          <ContactDetails>\n            <ContactAvatar src={contact.avatarURL} alt=\"avatar\" />\n            <ContactName>{contact.name}</ContactName>\n            <ContactPhoneMail>{contact.number}</ContactPhoneMail>\n            <ContactPhoneMail>{contact.email}</ContactPhoneMail>\n            <IconBar\n              contact={contact}\n              onDelClick={() => dispatch(delContact(id))}\n              onFavoriteClick={handleFavorite}\n              id={id}\n            />\n          </ContactDetails>\n        )}\n      </ContactContainer>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectStatus","status","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","backdrop","require","Container","styled","_templateObject","_taggedTemplateLiteral","useContacts","useSelector","filtredContacts","buttonStyle","ButtonPhone","_templateObject2","ButtonFavorite","_templateObject3","ButtonMail","_templateObject4","ButtonEdit","_templateObject5","ButtonDelete","_templateObject6","LinkStyled","Link","_templateObject7","TagA","_templateObject8","IconStyle","IconPhone","BiPhone","_templateObject9","IconFavorite","AiFillStar","_templateObject10","props","fill","IconMail","CiMail","_templateObject11","IconEdit","AiOutlineEdit","_templateObject12","IconDelete","AiOutlineDelete","_templateObject13","IconBar","_ref","onDelClick","id","onFavoriteClick","location","useLocation","_jsxs","children","_jsx","href","concat","phone","type","onClick","favorite","email","to","from","ContactContainer","ContactDetails","ContactAvatar","ContactName","ContactPhoneMail","ContactInfo","dispatch","useDispatch","useParams","find","item","_id","useEffect","fetchContacts","src","avatarURL","alt","number","delContact","updateStatusContact"],"sourceRoot":""}
{"version":3,"file":"static/js/250.f59fe721.chunk.js","mappings":"wKAEaA,EAAWC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yIASrBC,EAAcH,EAAAA,EAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8CAKtBG,EAAcL,EAAAA,EAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gC,UCdpB,SAASK,IACtB,IAAMC,EAAO,IAAIC,KACXC,EAAOF,EAAKG,WACZC,EAAUJ,EAAKK,aAAaC,WAAWC,SAAS,EAAG,KACnDC,EAAMR,EAAKS,UAEbC,EAAY,GAChB,OAFcV,EAAKW,YAGjB,KAAK,EACHD,EAAY,UACZ,MACF,KAAK,EACHA,EAAY,WACZ,MACF,KAAK,EACHA,EAAY,QACZ,MACF,KAAK,EACHA,EAAY,QACZ,MACF,KAAK,EACHA,EAAY,MACZ,MACF,KAAK,EACHA,EAAY,OACZ,MACF,KAAK,EACHA,EAAY,OACZ,MACF,KAAK,EACHA,EAAY,SACZ,MACF,KAAK,EACHA,EAAY,YACZ,MACF,KAAK,EACHA,EAAY,UACZ,MACF,KAAK,GACHA,EAAY,WACZ,MACF,KAAK,GACHA,EAAY,WACZ,MAEF,QACEA,EAAY,GAEhB,OACEE,EAAAA,EAAAA,MAACrB,EAAQ,CAAAsB,SAAA,EACPD,EAAAA,EAAAA,MAACjB,EAAW,CAAAkB,SAAA,CACTX,EAAK,IAAEE,MAEVQ,EAAAA,EAAAA,MAACf,EAAW,CAAAgB,SAAA,CACTL,EAAI,OAAOE,OAIpB,C,6KCvDaI,GAAatB,EAAAA,EAAAA,GAAOuB,EAAAA,GAAPvB,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAIzBsB,EAAgBxB,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4EAOjCuB,EAAiB,kNAaVC,EAAe1B,EAAAA,EAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gKACrCuB,GASSE,EAAe3B,EAAAA,EAAAA,OAAa4B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,gKACrCuB,G,IASsBzB,EAAAA,EAAAA,GAAO6B,EAAAA,IAAP7B,CAAsB8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,iJAUtBF,EAAAA,EAAAA,GAAO+B,EAAAA,IAAP/B,CAA0BgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,gJ,SCpDrC,SAAS+B,IACtB,OACEb,EAAAA,EAAAA,MAACI,EAAa,CAAAH,SAAA,EACZa,EAAAA,EAAAA,KAACZ,EAAU,CAACa,GAAG,UAASd,UACtBD,EAAAA,EAAAA,MAACM,EAAY,CAACU,KAAK,SAAQf,SAAA,CAAC,SACrBa,EAAAA,EAAAA,KAAA,SAAM,WAKfA,EAAAA,EAAAA,KAACZ,EAAU,CAACa,GAAG,UAASd,UACtBD,EAAAA,EAAAA,MAACO,EAAY,CAACS,KAAK,SAAQf,SAAA,CAAC,SACrBa,EAAAA,EAAAA,KAAA,SAAM,YAMrB,C,oCCrBO,IAAMG,GAAMC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,uLAqBbC,GAAOC,EAAAA,EAAAA,IAAS1C,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4HAaT0C,GAAYN,EAAAA,EAAAA,GAAA,UAAAC,OAAA,aAAAD,CAAA,4SAmBRI,EAAI,kBAIRG,GAAkBP,EAAAA,EAAAA,GAAOQ,EAAAA,IAAe,CAAAP,OAAA,aAAtBD,CAAuB,CAAAE,KAAA,UAAAC,OAAA,sCCtDvC,SAASM,IACtB,IAAQC,GAAeC,EAAAA,EAAAA,KAAfD,WACRE,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpB,OACEhC,EAAAA,EAAAA,MAACiB,EAAM,CAAAhB,SAAA,EACLa,EAAAA,EAAAA,KAAC3B,EAAAA,EAAI,IACJ+C,IAAQpB,EAAAA,EAAAA,KAACD,EAAO,IAChBe,GACCd,EAAAA,EAAAA,KAACX,EAAAA,GAAI,CAACY,GAAG,QAAOd,UACda,EAAAA,EAAAA,KAACU,EAAY,CAACR,KAAK,SAAQf,UACzBa,EAAAA,EAAAA,KAACW,EAAe,SAIpBX,EAAAA,EAAAA,KAACU,EAAY,CACXR,KAAK,SACLoB,QAAS,WACPD,GAASD,EACX,EAAEjC,UAEFa,EAAAA,EAAAA,KAACW,EAAe,QAK1B,C","sources":["components/time/time.styled.jsx","components/time/time.jsx","components/authNav/authNav.styled.jsx","components/authNav/authNav.jsx","pages/screenLock/screenLock.styled.jsx","pages/screenLock/screenLock.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TimeDate = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 10vh;\n  margin: 0 auto;\n  align-items: center;\n  color: white;\n`;\n\nexport const DisplayTime = styled.p`\n  font-size: 3.75em;\n  margin: 0;\n`;\n\nexport const DisplayDate = styled.p`\n  font-size: 1.25em;\n`;\n","import { TimeDate, DisplayTime, DisplayDate } from './time.styled';\n\nexport default function Time() {\n  const date = new Date();\n  const hour = date.getHours();\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const day = date.getDate();\n  const month = date.getMonth();\n  let monthName = '';\n  switch (month) {\n    case 0:\n      monthName = 'January';\n      break;\n    case 1:\n      monthName = 'February';\n      break;\n    case 2:\n      monthName = 'March';\n      break;\n    case 3:\n      monthName = 'April';\n      break;\n    case 4:\n      monthName = 'May';\n      break;\n    case 5:\n      monthName = 'June';\n      break;\n    case 6:\n      monthName = 'July';\n      break;\n    case 7:\n      monthName = 'August';\n      break;\n    case 8:\n      monthName = 'September';\n      break;\n    case 9:\n      monthName = 'October';\n      break;\n    case 10:\n      monthName = 'November';\n      break;\n    case 11:\n      monthName = 'December';\n      break;\n\n    default:\n      monthName = '';\n  }\n  return (\n    <TimeDate>\n      <DisplayTime>\n        {hour}:{minutes}\n      </DisplayTime>\n      <DisplayDate>\n        {day}&nbsp;{monthName}\n      </DisplayDate>\n    </TimeDate>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineLogin } from 'react-icons/ai';\nimport { HiArrowNarrowRight } from 'react-icons/hi';\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ContainerAuth = styled.div`\n  display: flex;\n  gap: 3em;\n  height: 5em;\n  margin: 0 auto;\n`;\n\nconst buttonCoomonStyle = `\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  font-size: 0.9em;\n  width: 5em;\n  height: 5em;\n  border-radius: 25%;\n`;\n\nexport const ButtonSignUp = styled.button`\n  ${buttonCoomonStyle}\n  background: linear-gradient(\n    90deg,\n    rgba(180, 98, 14, 1) 0%,\n    rgba(240, 195, 78, 1) 13%,\n    rgba(240, 195, 78, 1) 100%\n  );\n`;\n\nexport const ButtonSignIn = styled.button`\n  ${buttonCoomonStyle}\n  background: linear-gradient(\n    90deg,\n    rgba(25, 133, 55, 1) 0%,\n    rgba(58, 211, 100, 1) 13%,\n    rgba(58, 211, 100, 1) 100%\n  );\n`;\n\nexport const IconSignIn = styled(AiOutlineLogin)`\n  position: absolute;\n  top: 50%;\n  left: 3%;\n  transform: translate(-3%, -50%);\n  fill: #000000;\n  width: 2em;\n  height: 2em;\n`;\n\nexport const IconSignUp = styled(HiArrowNarrowRight)`\n  position: absolute;\n  top: 50%;\n  left: 3%;\n  transform: translate(-3%, -50%);\n  fill: #000000;\n  width: 2em;\n  height: 2em;\n`;\n","import {\n  LinkStyled,\n  ContainerAuth,\n  ButtonSignUp,\n  ButtonSignIn,\n} from './authNav.styled';\n\nexport default function AuthNav() {\n  return (\n    <ContainerAuth>\n      <LinkStyled to=\"/signup\">\n        <ButtonSignUp type=\"button\">\n          Sign <br />\n          Up\n        </ButtonSignUp>\n      </LinkStyled>\n\n      <LinkStyled to=\"/signin\">\n        <ButtonSignIn type=\"button\">\n          Sign <br />\n          In\n        </ButtonSignIn>\n      </LinkStyled>\n    </ContainerAuth>\n  );\n}\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { IoMdFingerPrint } from 'react-icons/io';\n\nexport const Locked = styled.div`\n  position: absolute;\n  display: flex;\n  flex-wrap: wrap;\n  left: 0;\n  background-color: #000000;\n  height: 100%;\n  width: 100%;\n  border-radius: 1.1em;\n  box-shadow: 0px 0px 6px 4px rgba(121, 128, 133, 0.3) inset;\n`;\n\nexport const TimeDate = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 10vh;\n  margin: 0 auto;\n  align-items: center;\n  color: white;\n`;\n\nconst ring = keyframes`\n0% {\n  width: 5em;\n  height: 5em;\n  opacity: 1;\n}\n100% {\n  width: 8em;\n  height: 8em;\n  opacity: 0;\n}\n  `;\n\nexport const UnlockButton = styled.button`\n  position: absolute;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -90%);\n  background-color: black;\n  padding: 0;\n  border: none;\n  border-radius: 50%;\n  &::before {\n    content: '';\n    position: absolute;\n    width: 5em;\n    height: 5em;\n    border-radius: 100%;\n    border: 0.2em solid #ffffffcc;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    animation: ${ring} 5s infinite;\n  }\n`;\n\nexport const IconFingerPrint = styled(IoMdFingerPrint)`\n  width: 5em;\n  height: 5em;\n  fill: #ffffff;\n`;\n","import { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useAuth } from 'hooks/useAuth';\nimport Time from 'components/time/time';\nimport AuthNav from 'components/authNav/authNav';\nimport { Locked, UnlockButton, IconFingerPrint } from './screenLock.styled';\n\nexport default function ScreenLock() {\n  const { isLoggedIn } = useAuth();\n  const [lock, setLock] = useState(false);\n  return (\n    <Locked>\n      <Time />\n      {lock && <AuthNav />}\n      {isLoggedIn ? (\n        <Link to=\"/home\">\n          <UnlockButton type=\"button\">\n            <IconFingerPrint />\n          </UnlockButton>\n        </Link>\n      ) : (\n        <UnlockButton\n          type=\"button\"\n          onClick={() => {\n            setLock(!lock);\n          }}\n        >\n          <IconFingerPrint />\n        </UnlockButton>\n      )}\n    </Locked>\n  );\n}\n"],"names":["TimeDate","styled","_templateObject","_taggedTemplateLiteral","DisplayTime","_templateObject2","DisplayDate","_templateObject3","Time","date","Date","hour","getHours","minutes","getMinutes","toString","padStart","day","getDate","monthName","getMonth","_jsxs","children","LinkStyled","Link","ContainerAuth","buttonCoomonStyle","ButtonSignUp","ButtonSignIn","_templateObject4","AiOutlineLogin","_templateObject5","HiArrowNarrowRight","_templateObject6","AuthNav","_jsx","to","type","Locked","_styled","target","name","styles","ring","keyframes","UnlockButton","IconFingerPrint","IoMdFingerPrint","ScreenLock","isLoggedIn","useAuth","_useState","useState","_useState2","_slicedToArray","lock","setLock","onClick"],"sourceRoot":""}
{"version":3,"file":"static/js/537.ac67c314.chunk.js","mappings":"kOAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,EAEpDC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAI5CC,GAAyBC,EAAAA,EAAAA,IACpC,CAACT,EAHyB,SAAAC,GAAK,OAAIA,EAAMS,OAAOA,MAAO,IAIvD,SAACR,EAAUQ,GACT,OAAOR,EAASQ,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cAAc,GAE7D,G,+ECdIE,EAAWC,EAAQ,KAEZC,EAAYC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iYASTL,E,8FCVbM,EAAiBH,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qLAU3BE,GAAUJ,EAAAA,EAAAA,GAAOK,EAAAA,IAAPL,CAAoBM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yCAK9BK,EAAYP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iD,UChBlB,SAASO,IACtB,OACEC,EAAAA,EAAAA,MAACP,EAAc,CAAAQ,SAAA,EACbC,EAAAA,EAAAA,KAACR,EAAO,KACRQ,EAAAA,EAAAA,KAACL,EAAS,CAAAI,SAAC,WACXC,EAAAA,EAAAA,KAACL,EAAS,CAAAI,SAAC,4BAGjB,C,6FCRaE,EAAgBb,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2E,UCAvB,SAASY,IACtB,OAAOF,EAAAA,EAAAA,KAACC,EAAa,CAAAF,SAAC,aACxB,C,4ECCaI,EAAMf,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mJAShBc,EAAQhB,EAAAA,EAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4GAQpBe,EAAQjB,EAAAA,EAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gOAapBgB,GAAalB,EAAAA,EAAAA,GAAOmB,EAAAA,IAAPnB,CAAgBoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,4BAI7BmB,GAAYrB,EAAAA,EAAAA,GAAOsB,EAAAA,IAAPtB,CAAqBuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,4BAIjCsB,GAAaxB,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAY0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,6BC/BvB,SAASyB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACEnB,EAAAA,EAAAA,KAACG,EAAG,CAAAJ,UACFD,EAAAA,EAAAA,MAACM,EAAK,CAAAL,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAU,KACXN,EAAAA,EAAAA,KAACK,EAAK,CACJe,SAAU,SAAAC,GAAC,OAAIL,GAASM,EAAAA,EAAAA,GAAUD,EAAEE,OAAOC,OAAO,EAClDC,YAAY,wBACZC,KAAK,UAEP1B,EAAAA,EAAAA,KAACY,EAAU,CAACe,GAAE,OAAUxD,MAAO,CAAEyD,KAAMV,GAAWnB,UAChDC,EAAAA,EAAAA,KAACS,EAAS,UAKpB,C,gBC7BaoB,EAAgBzC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2ECEvB,SAASwC,IACtB,IAAM1D,GAAW2D,EAAAA,EAAAA,IAAY7D,EAAAA,IAC7B,OAAO4B,EAAAA,EAAAA,MAAC+B,EAAa,CAAA9B,SAAA,CAAC,aAAW3B,EAAS4D,OAAO,MACnD,C,gCCJaC,EAAoB7C,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gEAK9B4C,EAAO9C,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8NAWhB6C,EAAW/C,EAAAA,EAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yKAYpBsB,GAAaxB,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAYoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,yF,8BC5BhC8C,EAAe,SAAAC,GAAK,OACxBrC,EAAAA,EAAAA,KAACsC,EAAAA,IAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACZC,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,IAAK,GACLC,QAAQ,cACRC,gBAAgB,YAChBC,gBAAgB,WACZT,GAAK,IAAAtC,UAETC,EAAAA,EAAAA,KAAA,QAAM+C,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMC,OAAO,UACtC,ECIH,SAASS,IACtB,IAAM9E,GAAQ0D,EAAAA,EAAAA,IAAY7D,EAAAA,IACpBK,GAAYwD,EAAAA,EAAAA,IAAYzD,EAAAA,IACxBG,GAAQsD,EAAAA,EAAAA,IAAYvD,EAAAA,IACpBwC,GAAWC,EAAAA,EAAAA,MACXmC,GAAkBrB,EAAAA,EAAAA,IAAYrD,EAAAA,IAC9BwC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAkC,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACX,GAAG,CAACtC,KAGFlB,EAAAA,EAAAA,MAACmC,EAAiB,CAAAlC,SAAA,CACfxB,IAAayB,EAAAA,EAAAA,KAACoC,EAAY,IAC1B3D,IAASuB,EAAAA,EAAAA,KAACH,EAAAA,EAAK,IACfxB,EAAM2D,OAAS,IACdhC,EAAAA,EAAAA,KAACkC,EAAI,CAAAnC,SACFqD,EAAgBG,KAAI,SAAAC,GAAmB,IAAhBC,EAAED,EAAFC,GAAI3E,EAAI0E,EAAJ1E,KAC1B,OACEkB,EAAAA,EAAAA,KAACmC,EAAQ,CAAApC,UACPC,EAAAA,EAAAA,KAACY,EAAU,CAACe,GAAE,cAAA+B,OAAgBD,GAAMtF,MAAO,CAAEyD,KAAMV,GAAWnB,SAC3DjB,KAFU2E,EAMnB,QAKV,C,aC5Ce,SAASE,IACtB,OACE7D,EAAAA,EAAAA,MAACX,EAAAA,EAAS,CAAAY,SAAA,EACRC,EAAAA,EAAAA,KAACE,EAAO,KACRF,EAAAA,EAAAA,KAACe,EAAS,KACVf,EAAAA,EAAAA,KAAC8B,EAAO,KACR9B,EAAAA,EAAAA,KAACmD,EAAW,MAGlB,C","sources":["Redux/Selectors.js","components/elements/backdropContainer/backdropContainer.styled.jsx","components/error/error.styled.jsx","components/error/error.jsx","components/titleH1/titleH1.styled.jsx","components/titleH1/titleH1.jsx","components/filterBar/filterBar.styled.jsx","components/filterBar/filterBar.jsx","components/titleH2/titleH2.styled.jsx","components/titleH2/titleH2.jsx","components/contactList/contactList.styled.jsx","components/skeleton/skeleton.jsx","components/contactList/contactList.jsx","pages/phoneBook/phooneBook.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nconst backdrop = require('./backdrop.webp');\n\nexport const Container = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  left: 0;\n  background-color: black;\n  height: 100%;\n  width: 100%;\n  border-radius: 1.125em;\n  background-image: url(${backdrop});\n  background-size: cover;\n  overflow-y: auto;\n  box-shadow: 0px 2px 6px 4px rgba(121, 128, 133, 0.3) inset;\n  &::-webkit-scrollbar {\n    width: 0px;\n    height: 0px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FaRegSadTear } from 'react-icons/fa';\n\nexport const ContainerError = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #ffffffcc;\n  border-radius: 0.5em;\n  height: 20vh;\n  align-items: center;\n`;\n\nexport const IconSad = styled(FaRegSadTear)`\n  width: 2em;\n  height: 2em;\n`;\n\nexport const TextError = styled.p`\n  font-size: 1.5em;\n  margin: 0.5em;\n`;\n","import { ContainerError, TextError, IconSad } from './error.styled';\n\nexport default function Error() {\n  return (\n    <ContainerError>\n      <IconSad />\n      <TextError>Oops!</TextError>\n      <TextError>Something went wrong.</TextError>\n    </ContainerError>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const TitleH1Styled = styled.h1`\n  color: #ffffffcc;\n  font-size: 2.2em;\n  margin: 1em auto 0;\n`;\n","import { TitleH1Styled } from './titleH1.styled';\n\nexport default function TitleH1() {\n  return <TitleH1Styled>Phonebook</TitleH1Styled>;\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { GoSearch } from 'react-icons/go';\nimport { AiOutlinePlus } from 'react-icons/ai';\n\nexport const Bar = styled.div`\n  display: flex;\n  gap: 1.25em;\n  width: calc(100% - 1.25em);\n  background-color: #ffffffcc;\n  margin: 3%;\n  border-radius: 0.5em;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  min-height: 4vh;\n  width: 100%;\n  align-items: center;\n  margin: 0 0.5em;\n`;\n\nexport const Input = styled.input`\n  height: calc(100% - 2px);\n  width: 75%;\n  padding: 0em 0em 0em 0.5em;\n  border: none;\n  border-radius: 0.5em;\n  margin-right: 0.25em;\n  background-color: transparent;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const IconSearch = styled(GoSearch)`\n  fill: #000000;\n`;\n\nexport const IconCross = styled(AiOutlinePlus)`\n  fill: #000000;\n`;\n\nexport const LinkStyled = styled(Link)`\n  margin: 0 auto;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'Redux/filter/filterSlice';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Bar,\n  Input,\n  Label,\n  IconSearch,\n  IconCross,\n  LinkStyled,\n} from './filterBar.styled';\n\nexport default function FilterBar() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  return (\n    <Bar>\n      <Label>\n        <IconSearch />\n        <Input\n          onChange={e => dispatch(setFilter(e.target.value))}\n          placeholder=\"Find contacts by name\"\n          type=\"text\"\n        ></Input>\n        <LinkStyled to={`/add`} state={{ from: location }}>\n          <IconCross />\n        </LinkStyled>\n      </Label>\n    </Bar>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const TitleH2Styled = styled.h2`\n  color: #ffffffcc;\n  font-size: 1.5em;\n  margin: 2em auto 0;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'Redux/Selectors';\nimport { TitleH2Styled } from './titleH2.styled';\n\nexport default function TitleH2() {\n  const contacts = useSelector(selectContacts);\n  return <TitleH2Styled>Contacts ({contacts.length})</TitleH2Styled>;\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ContactsContainer = styled.div`\n  width: calc(100% - 1.25em);\n  margin: 0 auto 2em;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 0.75em;\n  list-style: none;\n  border-radius: 0.5em;\n  padding: 0 0.5em;\n  background-color: #ffffffcc;\n  box-shadow: 0px 0px 1px 0px rgba(0, 0, 0, 0.75);\n`;\n\nexport const ListItem = styled.li`\n  border-bottom: 1px solid #c1c0c0;\n  cursor: pointer;\n  &:nth-of-type(1) {\n    margin-top: 0.6em;\n  }\n  &:hover,\n  focus {\n    font-weight: 500;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  width: 100%;\n  text-decoration: none;\n  color: #000000;\n`;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst SkeletonList = props => (\n  <ContentLoader\n    speed={2}\n    width={280}\n    height={500}\n    top={36}\n    viewBox=\"0 0 280 500\"\n    backgroundColor=\"#ffffffcc\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"0\" y=\"16\" rx=\"5\" ry=\"5\" width=\"280\" height=\"500\" />\n  </ContentLoader>\n);\n\nexport { SkeletonList };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'Redux/Selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'Redux/contacts/Operations';\nimport {\n  ContactsContainer,\n  List,\n  ListItem,\n  LinkStyled,\n} from './contactList.styled';\nimport Error from 'components/error/error';\nimport { SkeletonList } from 'components/skeleton/skeleton';\n\nexport default function ContactList() {\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const filtredContacts = useSelector(selectFilteredContacts);\n  const location = useLocation();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsContainer>\n      {isLoading && <SkeletonList />}\n      {error && <Error />}\n      {items.length > 0 && (\n        <List>\n          {filtredContacts.map(({ id, name }) => {\n            return (\n              <ListItem key={id}>\n                <LinkStyled to={`/phonebook/${id}`} state={{ from: location }}>\n                  {name}\n                </LinkStyled>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n    </ContactsContainer>\n  );\n}\n","import TitleH1 from 'components/titleH1/titleH1.jsx';\nimport FilterBar from 'components/filterBar/filterBar';\nimport TitleH2 from 'components/titleH2/titleH2';\nimport ContactList from 'components/contactList/contactList';\nimport { Container } from '../../components/elements/backdropContainer/backdropContainer.styled';\n\nexport default function Phonebook() {\n  return (\n    <Container>\n      <TitleH1 />\n      <FilterBar />\n      <TitleH2 />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","backdrop","require","Container","styled","_templateObject","_taggedTemplateLiteral","ContainerError","IconSad","FaRegSadTear","_templateObject2","TextError","_templateObject3","Error","_jsxs","children","_jsx","TitleH1Styled","TitleH1","Bar","Label","Input","IconSearch","GoSearch","_templateObject4","IconCross","AiOutlinePlus","_templateObject5","LinkStyled","Link","_templateObject6","FilterBar","dispatch","useDispatch","location","useLocation","onChange","e","setFilter","target","value","placeholder","type","to","from","TitleH2Styled","TitleH2","useSelector","length","ContactsContainer","List","ListItem","SkeletonList","props","ContentLoader","_objectSpread","speed","width","height","top","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","ContactList","filtredContacts","useEffect","fetchContacts","map","_ref","id","concat","Phonebook"],"sourceRoot":""}